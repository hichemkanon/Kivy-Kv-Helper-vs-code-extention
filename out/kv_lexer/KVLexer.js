"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// Generated from D:/vs extention/kivy-kv-helper/src/kv_lexer/KVLexer.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
const antlr4_1 = require("antlr4");
class KVLexer extends antlr4_1.Lexer {
    static WS = 1;
    static ID = 2;
    static NUMBER = 3;
    static STRING = 4;
    static EQUALS = 5;
    static COLON = 6;
    static COMMA = 7;
    static LBRACE = 8;
    static RBRACE = 9;
    static LPAREN = 10;
    static RPAREN = 11;
    static LSQUARE = 12;
    static RSQUARE = 13;
    static RULE = 14;
    static SCREEN = 15;
    static BUTTON = 16;
    static LABEL = 17;
    static TEXTINPUT = 18;
    static BOXLAYOUT = 19;
    static GRIDLAYOUT = 20;
    static STACKLAYOUT = 21;
    static FLOATLAYOUT = 22;
    static EOF = antlr4_1.Token.EOF;
    static channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"];
    static literalNames = [null, null,
        null, null,
        null, "'='",
        "':'", "','",
        "'{'", "'}'",
        "'('", "')'",
        "'['", "']'",
        "'rule'", "'screen'",
        "'button'",
        "'label'", "'textinput'",
        "'boxlayout'",
        "'gridlayout'",
        "'stacklayout'",
        "'floatlayout'"];
    static symbolicNames = [null, "WS",
        "ID", "NUMBER",
        "STRING", "EQUALS",
        "COLON", "COMMA",
        "LBRACE", "RBRACE",
        "LPAREN", "RPAREN",
        "LSQUARE",
        "RSQUARE",
        "RULE", "SCREEN",
        "BUTTON", "LABEL",
        "TEXTINPUT",
        "BOXLAYOUT",
        "GRIDLAYOUT",
        "STACKLAYOUT",
        "FLOATLAYOUT"];
    static modeNames = ["DEFAULT_MODE",];
    static ruleNames = [
        "WS", "ID", "NUMBER", "STRING", "EQUALS", "COLON", "COMMA", "LBRACE",
        "RBRACE", "LPAREN", "RPAREN", "LSQUARE", "RSQUARE", "RULE", "SCREEN",
        "BUTTON", "LABEL", "TEXTINPUT", "BOXLAYOUT", "GRIDLAYOUT", "STACKLAYOUT",
        "FLOATLAYOUT",
    ];
    constructor(input) {
        super(input);
        this._interp = new antlr4_1.LexerATNSimulator(this, KVLexer._ATN, KVLexer.DecisionsToDFA, new antlr4_1.PredictionContextCache());
    }
    get grammarFileName() { return "KVLexer.g4"; }
    get literalNames() { return KVLexer.literalNames; }
    get symbolicNames() { return KVLexer.symbolicNames; }
    get ruleNames() { return KVLexer.ruleNames; }
    get serializedATN() { return KVLexer._serializedATN; }
    get channelNames() { return KVLexer.channelNames; }
    get modeNames() { return KVLexer.modeNames; }
    static _serializedATN = [4, 0, 22, 171, 6, -1, 2, 0,
        7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9,
        7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7,
        16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 1, 0, 4, 0, 47, 8, 0, 11,
        0, 12, 0, 48, 1, 0, 1, 0, 1, 1, 1, 1, 5, 1, 55, 8, 1, 10, 1, 12, 1, 58, 9, 1, 1, 2, 4, 2, 61, 8, 2, 11,
        2, 12, 2, 62, 1, 3, 1, 3, 5, 3, 67, 8, 3, 10, 3, 12, 3, 70, 9, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1,
        6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1,
        13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15,
        1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1,
        17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19,
        1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1,
        20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21,
        1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 0, 0, 22, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9,
        19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21,
        43, 22, 1, 0, 5, 3, 0, 9, 10, 13, 13, 32, 32, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90,
        95, 95, 97, 122, 1, 0, 48, 57, 3, 0, 10, 10, 13, 13, 34, 34, 174, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0,
        0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1,
        0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0,
        0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1,
        0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 1, 46, 1, 0, 0, 0, 3, 52, 1, 0, 0, 0,
        5, 60, 1, 0, 0, 0, 7, 64, 1, 0, 0, 0, 9, 73, 1, 0, 0, 0, 11, 75, 1, 0, 0, 0, 13, 77, 1, 0, 0, 0, 15, 79,
        1, 0, 0, 0, 17, 81, 1, 0, 0, 0, 19, 83, 1, 0, 0, 0, 21, 85, 1, 0, 0, 0, 23, 87, 1, 0, 0, 0, 25, 89, 1,
        0, 0, 0, 27, 91, 1, 0, 0, 0, 29, 96, 1, 0, 0, 0, 31, 103, 1, 0, 0, 0, 33, 110, 1, 0, 0, 0, 35, 116,
        1, 0, 0, 0, 37, 126, 1, 0, 0, 0, 39, 136, 1, 0, 0, 0, 41, 147, 1, 0, 0, 0, 43, 159, 1, 0, 0, 0, 45,
        47, 7, 0, 0, 0, 46, 45, 1, 0, 0, 0, 47, 48, 1, 0, 0, 0, 48, 46, 1, 0, 0, 0, 48, 49, 1, 0, 0, 0, 49, 50,
        1, 0, 0, 0, 50, 51, 6, 0, 0, 0, 51, 2, 1, 0, 0, 0, 52, 56, 7, 1, 0, 0, 53, 55, 7, 2, 0, 0, 54, 53, 1,
        0, 0, 0, 55, 58, 1, 0, 0, 0, 56, 54, 1, 0, 0, 0, 56, 57, 1, 0, 0, 0, 57, 4, 1, 0, 0, 0, 58, 56, 1, 0,
        0, 0, 59, 61, 7, 3, 0, 0, 60, 59, 1, 0, 0, 0, 61, 62, 1, 0, 0, 0, 62, 60, 1, 0, 0, 0, 62, 63, 1, 0, 0,
        0, 63, 6, 1, 0, 0, 0, 64, 68, 5, 34, 0, 0, 65, 67, 8, 4, 0, 0, 66, 65, 1, 0, 0, 0, 67, 70, 1, 0, 0, 0,
        68, 66, 1, 0, 0, 0, 68, 69, 1, 0, 0, 0, 69, 71, 1, 0, 0, 0, 70, 68, 1, 0, 0, 0, 71, 72, 5, 34, 0, 0,
        72, 8, 1, 0, 0, 0, 73, 74, 5, 61, 0, 0, 74, 10, 1, 0, 0, 0, 75, 76, 5, 58, 0, 0, 76, 12, 1, 0, 0, 0,
        77, 78, 5, 44, 0, 0, 78, 14, 1, 0, 0, 0, 79, 80, 5, 123, 0, 0, 80, 16, 1, 0, 0, 0, 81, 82, 5, 125,
        0, 0, 82, 18, 1, 0, 0, 0, 83, 84, 5, 40, 0, 0, 84, 20, 1, 0, 0, 0, 85, 86, 5, 41, 0, 0, 86, 22, 1, 0,
        0, 0, 87, 88, 5, 91, 0, 0, 88, 24, 1, 0, 0, 0, 89, 90, 5, 93, 0, 0, 90, 26, 1, 0, 0, 0, 91, 92, 5, 114,
        0, 0, 92, 93, 5, 117, 0, 0, 93, 94, 5, 108, 0, 0, 94, 95, 5, 101, 0, 0, 95, 28, 1, 0, 0, 0, 96, 97,
        5, 115, 0, 0, 97, 98, 5, 99, 0, 0, 98, 99, 5, 114, 0, 0, 99, 100, 5, 101, 0, 0, 100, 101, 5, 101,
        0, 0, 101, 102, 5, 110, 0, 0, 102, 30, 1, 0, 0, 0, 103, 104, 5, 98, 0, 0, 104, 105, 5, 117, 0, 0,
        105, 106, 5, 116, 0, 0, 106, 107, 5, 116, 0, 0, 107, 108, 5, 111, 0, 0, 108, 109, 5, 110, 0, 0,
        109, 32, 1, 0, 0, 0, 110, 111, 5, 108, 0, 0, 111, 112, 5, 97, 0, 0, 112, 113, 5, 98, 0, 0, 113,
        114, 5, 101, 0, 0, 114, 115, 5, 108, 0, 0, 115, 34, 1, 0, 0, 0, 116, 117, 5, 116, 0, 0, 117, 118,
        5, 101, 0, 0, 118, 119, 5, 120, 0, 0, 119, 120, 5, 116, 0, 0, 120, 121, 5, 105, 0, 0, 121, 122,
        5, 110, 0, 0, 122, 123, 5, 112, 0, 0, 123, 124, 5, 117, 0, 0, 124, 125, 5, 116, 0, 0, 125, 36,
        1, 0, 0, 0, 126, 127, 5, 98, 0, 0, 127, 128, 5, 111, 0, 0, 128, 129, 5, 120, 0, 0, 129, 130, 5,
        108, 0, 0, 130, 131, 5, 97, 0, 0, 131, 132, 5, 121, 0, 0, 132, 133, 5, 111, 0, 0, 133, 134, 5,
        117, 0, 0, 134, 135, 5, 116, 0, 0, 135, 38, 1, 0, 0, 0, 136, 137, 5, 103, 0, 0, 137, 138, 5, 114,
        0, 0, 138, 139, 5, 105, 0, 0, 139, 140, 5, 100, 0, 0, 140, 141, 5, 108, 0, 0, 141, 142, 5, 97,
        0, 0, 142, 143, 5, 121, 0, 0, 143, 144, 5, 111, 0, 0, 144, 145, 5, 117, 0, 0, 145, 146, 5, 116,
        0, 0, 146, 40, 1, 0, 0, 0, 147, 148, 5, 115, 0, 0, 148, 149, 5, 116, 0, 0, 149, 150, 5, 97, 0, 0,
        150, 151, 5, 99, 0, 0, 151, 152, 5, 107, 0, 0, 152, 153, 5, 108, 0, 0, 153, 154, 5, 97, 0, 0, 154,
        155, 5, 121, 0, 0, 155, 156, 5, 111, 0, 0, 156, 157, 5, 117, 0, 0, 157, 158, 5, 116, 0, 0, 158,
        42, 1, 0, 0, 0, 159, 160, 5, 102, 0, 0, 160, 161, 5, 108, 0, 0, 161, 162, 5, 111, 0, 0, 162, 163,
        5, 97, 0, 0, 163, 164, 5, 116, 0, 0, 164, 165, 5, 108, 0, 0, 165, 166, 5, 97, 0, 0, 166, 167, 5,
        121, 0, 0, 167, 168, 5, 111, 0, 0, 168, 169, 5, 117, 0, 0, 169, 170, 5, 116, 0, 0, 170, 44, 1,
        0, 0, 0, 5, 0, 48, 56, 62, 68, 1, 6, 0, 0];
    static __ATN;
    static get _ATN() {
        if (!KVLexer.__ATN) {
            KVLexer.__ATN = new antlr4_1.ATNDeserializer().deserialize(KVLexer._serializedATN);
        }
        return KVLexer.__ATN;
    }
    static DecisionsToDFA = KVLexer._ATN.decisionToState.map((ds, index) => new antlr4_1.DFA(ds, index));
}
exports.default = KVLexer;
//# sourceMappingURL=KVLexer.js.map